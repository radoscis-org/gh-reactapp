name: CI
on:
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop, main]

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.0.2
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          # NPM on Linux stores its cache in this directory
          path: ~/.npm
          # Hey can have expressions in name
          # We want to create new cache key when our dependencies are changed
          # so if anything in packge-lock.json has changed
          # so we use hashFiles function
          # We want also to generate new cache when operating system has changed
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          # restored when main key not found
          # It will search for older caches that starts with this pattern
          restore-keys: |
            ${{ runner.os }}-node-
      - uses: actions/setup-node@v1
        name: Setup Node Version
        with:
          node-version: 14
      - name: Install dependencies
        run: npm ci
      - name: Check formatting
        run: npm run format:check
      - name: Run Tests with code coverage together
        run: npm test -- --coverage
        # We need to have CI=true to not cause interactive actions from npm
        env:
          CI: true
      - name: Upload Test Coverage
        uses: actions/upload-artifact@v1
        with:
          path: coverage
          name: code-coverage
      - name: Build Project
        if: github.event_name == 'push'
        run: npm run build
      # - name: Install Surge
      #   run: npm install --global surge
      # Instead we will install and run in one command
      - name: Upload Build folder
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v1
        with:
          path: build
          name: build
      - name: Create a Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy to Staging Surge
        if: github.event_name == 'push'
        run: npx surge --project ./build --domain angry-babies.surge.sh
        env:
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
